<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>안 졸라맨 게임</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            background-color: #f4f4f4;
        }

        canvas {
            display: block;
            background-color: #000;
            margin: 0 auto;
        }
    </style>
</head>
<body>

<canvas id="gameCanvas" width="800" height="400"></canvas>

<script>
// 게임 설정
const canvas = document.getElementById("gameCanvas");
const ctx = canvas.getContext("2d");

const GRAVITY = 0.5;
const JUMP_STRENGTH = -10;
const SLIDE_SPEED = 5;

let score = 0;
let lives = 3;
let isJumping = false;
let isSliding = false;
let jumpSpeed = 0;
let gameOver = false;
let obstacles = [];
let timeElapsed = 0;

// 안 졸라맨 캐릭터
const player = {
    x: 50,
    y: canvas.height - 50,
    width: 30,
    height: 50,
    color: "blue",
    dx: 0,
    dy: 0,
};

// 장애물 생성 함수 (레이저, 그물)
function generateObstacle() {
    const obstacleHeight = Math.random() * (canvas.height / 2);
    const obstacleType = Math.random() > 0.5 ? "laser" : "net";
    obstacles.push({
        x: canvas.width,
        y: canvas.height - obstacleHeight,
        width: 30 + Math.random() * 40,
        height: obstacleHeight,
        speed: 2 + Math.random() * 2,
        type: obstacleType,
    });
}

// 장애물 이동 및 충돌 검사
function moveObstacles() {
    for (let i = 0; i < obstacles.length; i++) {
        obstacles[i].x -= obstacles[i].speed;
        if (obstacles[i].x + obstacles[i].width < 0) {
            obstacles.splice(i, 1);
            score += 10;
        }

        // 충돌 체크 (플레이어와 장애물이 겹치는지 확인)
        if (
            player.x + player.width > obstacles[i].x &&
            player.x < obstacles[i].x + obstacles[i].width &&
            player.y + player.height > obstacles[i].y &&
            player.y < obstacles[i].y + obstacles[i].height
        ) {
            if (lives > 0) {
                lives--;
                resetPlayer();
            } else {
                gameOver = true;
            }
        }
    }
}

// 플레이어 움직임
function movePlayer() {
    if (isJumping) {
        player.dy += GRAVITY;
        if (player.y + player.height > canvas.height - 50) {
            player.y = canvas.height - 50;
            isJumping = false;
        }
    }

    if (isSliding) {
        player.height = 30;
    } else {
        player.height = 50;
    }

    player.y += player.dy;
}

// 점프 함수
function jump() {
    if (!isJumping) {
        isJumping = true;
        player.dy = JUMP_STRENGTH;
    }
}

// 슬라이딩 함수
function slide() {
    isSliding = true;
    setTimeout(() => {
        isSliding = false;
    }, 500);
}

// 플레이어 초기화
function resetPlayer() {
    player.x = 50;
    player.y = canvas.height - 50;
    player.dy = 0;
}

// 점수와 생명 표시
function displayScoreAndLives() {
    ctx.fillStyle = "white";
    ctx.font = "20px Arial";
    ctx.fillText("점수: " + score, 10, 30);
    ctx.fillText("생명: " + lives, 10, 60);
}

// 게임 오버 처리
function gameOverDisplay() {
    if (gameOver) {
        ctx.fillStyle = "red";
        ctx.font = "40px Arial";
        ctx.fillText("게임 오버", canvas.width / 2 - 100, canvas.height / 2);
    }
}

// 게임 그리기
function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = player.color;
    ctx.fillRect(player.x, player.y, player.width, player.height);

    obstacles.forEach((obstacle) => {
        ctx.fillStyle = obstacle.type === "laser" ? "red" : "green";
        ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);
    });

    displayScoreAndLives();
    gameOverDisplay();
}

// 게임 루프
function gameLoop() {
    if (gameOver) return;
    timeElapsed++;
    if (timeElapsed % 100 === 0) {
        generateObstacle();
    }
    moveObstacles();
    movePlayer();
    draw();
    requestAnimationFrame(gameLoop);
}

// 키 입력 처리
document.addEventListener("keydown", (e) => {
    if (e.key === "ArrowUp") {
        jump();
    }
    if (e.key === "ArrowDown") {
        slide();
    }
});

// 게임 시작
gameLoop();
</script>

</body>
</html>
